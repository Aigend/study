reset和rebase的区别
为什么git add和git commit要分开操作

在python函数参数中，*和**的区别

udp和tcp的区别
http和tcp的关系
http和https的区别，说了加密的过程，又问了https的证书，如何防止攻击？
get和post的区别，既然功能差不多，post存在的意义，幂等操作等

项目里python+django的部署是怎么做的，用了哪些技术，如何通信等
项目里涉及到的多线程/多进程
线程和进程的区别，python多线程，GIL
python多继承时，调用父类同一个方法的先后顺序
python怎么定义类中的静态方法
面向对象的三个基本要素，具体讲一下

.py和.pyc文件有什么区别？
	.py 文件是 Python 源代码文件，包含了 Python 程序的源代码，以及解释器需要执行程序的其他信息。
	.pyc 文件是 Python 编译后的字节码文件，它包含了被编译成机器码的 Python 程序。
	在 Python 中，当你导入一个模块时，解释器会自动查找该模块的 .pyc 文件，
	如果找到了就会直接执行 .pyc 文件中的字节码。
	如果找不到 .pyc 文件，就会先将 .py 文件编译成 .pyc 文件，然后再执行 .pyc 文件。
	这样做的目的是为了提高程序的执行效率，因为执行字节码的速度要快于执行源代码。
	 但是，.pyc 文件只能在相同的操作系统和 Python 版本下使用，如果操作系统或者 Python 版本不同就会出现问题。

python相关知识，迭代器、生成器、装饰器？
metaclass、args、kwargs。Flask与wsgi是如何交互的？
Flask源码读过么？Flask的IO多路复用用在了什么地方？

什么是闭包?
	闭包就是外部函数中定义一个内部函数，内部函数引用外部函数中的变量，外部函数的返回值是内部函数;

装饰器是一种增加函数或类功能的简单方法，它可以快速给不同的函数或类插入相同的功能。语法：“@装饰器名”加在函数之前

什么是生成器和迭代器？它们之间有什么区别？
迭代器
作用：简化循环的代码并可以节约内存
是一个可以记住遍历的位置的对象。迭代器对象从集合的第一个元素开始访问，直到所有的元素被访问完结束。迭代器只能往前不会后退
生成器
作用：节约大量内存
生成器(generator)的定义与普通函数类似，生成器使用yield关键字生成值。
使用了 yield 的函数被称为生成器、生成器是一个返回迭代器的函数，只能用于迭代操作，更简单点理解生成器就是一个迭代器
原理：在调用生成器运行的过程中，每次遇到 yield 时函数会暂停并保存当前所有的运行信息，返回 yield 的值, 并在下一次执行 next() 方法时从当前位置继续运行

Python垃圾回收机制
python采用的是引用计数机制为主，标记-清除和分代收集(隔代回收、分代回收)两种机制为辅的策略
计数机制：Python的GC模块主要运用了引用计数来跟踪和回收垃圾。在引用计数的基础上，还可以通过“标记-清除”解决容器对象可能产生的循环引用的问题。通过分代回收以空间换取时间进一步提高垃圾回收的效率。
标记-清除：：标记-清除的出现打破了循环引用，也就是它只关注那些可能会产生循环引用的对象
缺点：该机制所带来的额外操作和需要回收的内存块成正比。
隔代回收
原理：将系统中的所有内存块根据其存活时间划分为不同的集合，每一个集合就成为一个“代”，垃圾收集的频率随着“代”的存活时间的增大而减小。也就是说，活得越长的对象，就越不可能是垃圾，就应该减少对它的垃圾收集频率。那么如何来衡量这个存活时间：通常是利用几次垃圾收集动作来衡量，如果一个对象经过的垃圾收集次数越多，可以得出：该对象存活时间就越长。

浅拷贝，	
	改变原始对象中为可变类型的元素的值，会同时影响拷贝对象；
	改变原始对象中为不可变类型的元素的值，不会响拷贝对象。
深拷贝，
	除了顶层拷贝，还对子元素也进行了拷贝。经过深拷贝后，原始对象和拷贝对象所有的可变元素地址都没有相同的了

map()函数将给定函数应用于可迭代对象(列表、元组等)，然后返回结果(map对象)。
我们还可以在map()函数中，同时传递多个可迭代对象。 
numbers = (1, 2, 3, 4)
result = map(lambda x: x + x, numbers)
print(list(result))

reduce()函数接受一个函数和一个序列，并在计算后返回数值。
from functools import reduce
a = lambda x,y:x+y
print(reduce(a,[1,2,3,4]))


解释re模块的split()、sub()、subn()方法？
split()：只要模式匹配，此方法就会拆分字符串。
sub()：此方法用于将字符串中的某些模式替换为其他字符串或序列。
subn()：和sub()很相似，不同之处在于它返回一个元组，将总替换计数和新字符串作为输出
import re
string = "There are two ball in the basket 101"
re.split("\W+",string)
---------------------------------------
['There', 'are', 'two', 'ball', 'in', 'the', 'basket', '101']
re.sub("[^A-Za-z]"," ",string)
----------------------------------------
'There are two ball in the basket    '
re.subn("[^A-Za-z]"," ",string)
-----------------------------------------
('There are two ball in the basket    ', 10)

Python中OOPS是什么？
面向对象编程，抽象(Abstraction)、封装(Encapsulation)、继承(Inheritance)、多态(Polymorphism)

什么是Python中的猴子补丁？
猴子补丁(monkey patching)，是指在运行时动态修改类或模块
from SomeOtherProduct.SomeModule import SomeClass
def speak(self):
    return "Hello!"
SomeClass.speak = speak

zip函数获取可迭代对象，将它们聚合到一个元组中，然后返回结果。
zip()函数的语法是zip(*iterables)
numbers = [1, 2, 3]
string = ['one', 'two', 'three'] 
result = zip(numbers,string)
print(set(result))
-------------------------------------
{(3, 'three'), (2, 'two'), (1, 'one')}
